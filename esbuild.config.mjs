import esbuild from 'esbuild';
import builtins from 'builtin-modules';
import fs from 'fs';
import path from 'path';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';

// 构建 JavaScript 文件
esbuild.build({
  banner: { js: banner },
  entryPoints: ['src/main.ts'],
  bundle: true,
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr',
    ...builtins
  ],
  format: 'cjs',
  target: 'es2018',
  logLevel: 'info',
  sourcemap: prod ? false : 'inline',
  treeShaking: true,
  outfile: 'main.js'
}).then(() => {
  // 复制 CSS 文件到 styles.css
  const srcCssPath = path.join('src', 'styles.css');
  const destCssPath = 'styles.css';
  
  fs.copyFile(srcCssPath, destCssPath, (err) => {
    if (err) {
      console.error('无法复制 CSS 文件:', err);
    } else {
      console.log('CSS 文件已复制成功');
      // 删除可能存在的 main.css 文件
      fs.unlink('main.css', (unlinkErr) => {
        if (unlinkErr && unlinkErr.code !== 'ENOENT') {
          console.error('无法删除 main.css 文件:', unlinkErr);
        }
      });
    }
  });
});